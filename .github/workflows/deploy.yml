
name: Package ðŸ“¦ + ðŸš€ Deploy

on:
  workflow_call:
    inputs:
      library:
        type: string
        default: ${{ github.event.repository.name }}
      repo:
        type: string
        default: ${{ github.repository }}
      conan_version:
        type: string
        default: "2.6.0"
      version:
        type: string
        default: ""
      arch:
        type: string
        required: true
      os:
        type: string
        required: true

jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.1
        if: ${{ inputs.version != '' }}
        with:
          submodule: true
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.version }}
      - uses: actions/checkout@v4.1.1
        if: ${{ inputs.version == '' }}
        with:
          submodule: true
          repository: ${{ inputs.repo }}

      - name: Preparing vulkan
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true
      - name: Preparing lib1-mesa-dev because of some issues.
        run: sudo apt install xorg-dev libgl1-mesa-dev
      
      - name: Installing Conan ${{ inputs.conan_version }}
        run: pip install conan
          
      - name: Adding the engine3d repository to conan remotes
        run: conan remote add engine-conan https://libengine.jfrog.io/artifactory/api/conan/engine-conan

      - name: Creating and setup default conan profile
        run: conan profile detect --force

      - name: Show conan profile
        run: conan profile show

      - name: Install linux default profiles
        run: conan config install -sf profiles/x86_64/linux/ -tf profiles https://github.com/engine3d-dev/conan-config.git

      - name: Signing into JFrog
        env:
          PASSWORD: ${{ secrets.JFROG_ENGINE3D_TRUNKEN_ID_TOKEN }}
          USERNAME: ${{ secrets.JFROG_USERNAME }}
        run: conan remote login -p $PASSWORD engine-conan $USERNAME
      
      - name: Create Debug build of the package
        # run: conan create . -s build_type=Debug -c tools.system.package_manager:mode=install tools.system.package_manager:sudo=True -b missing
        run: conan create . -s build_type=Debug -c tools.system.package_manager:sudo=True -b missing

      - name: Creating `RelWithDebInfo` build for the package
        # run: conan create . -s build_type=RelWithDebInfo -c tools.system.package_manager:mode=install tools.system.package_manager:sudo=True -b missing
        run: conan create . -s build_type=RelWithDebInfo -c tools.system.package_manager:sudo=True -b missing

      - name: Creating `MinSizeRel` build for the package
        # run: conan create . -s build_type=MinSizeRel -c tools.system.package_manager:mode=install tools.system.package_manager:sudo=True -b missing
        run: conan create . -s build_type=MinSizeRel -c tools.system.package_manager:sudo=True -b missing

      - name: Create `Release` build for the package
        # run: conan create . -s build_type=Release -c tools.system.package_manager:mode=install tools.system.package_manager:sudo=True -b missing
        run: conan create . -s build_type=Release -c tools.system.package_manager:sudo=True -b missing

      - name: Upload package version ${{ inputs.library }} to `engine3d` repo
        # if: ${{ inputs.version != '' }}
        run: conan upload "${{ inputs.library }}" --confirm -r=engine-conan  
        
